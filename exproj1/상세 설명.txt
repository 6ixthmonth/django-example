** 예제의 목표 **
이 프로젝트에서는 이제 막 장고에 입문한 학생들을 대상으로 가장 기본적인 조작 방법을 알려준다.
프로젝트를 생성하는 방법은 무엇인지, 또 서버는 어떻게 구동하는지 설명한다.
올바르게 따라한다면 이 프로젝트와 유사한 결과물을 얻을 수 있다.


** 주요 배경 이론 및 문법 **
* 장고 설치 방법
- (명령 프롬프트에서) python -m pip install Django

* 장고 버전 확인
- (명령 프롬프트에서) python -m django --version
- (파이썬 쉘에서)
import django
print(django.get_version())

* 프로젝트 생성 방법
- (명령 프롬프트에서) django-admin startproject [프로젝트 이름]
- 프로젝트명으로 django, test 등의 이름은 피할 것.

* 서버 구동 방법
- (명령 프롬프트에서) python manage.py runserver [[IP번호:]포트 번호]
- 장고는 자체적으로 개발용 서버를 제공한다.
- 처음 서버를 구동하면, exproj1/settings.py 파일에 기록된 데이터베이스 설정 정보에 따라서 DB 파일(db.sqlite3)이 자동으로 생성된다.
- 또한 서버를 구동하면 마이그레이션 관련 경고 메시지가 출력되나 추후에 설명한다.
- 개발 서버는 프로젝트 내 파일에 변경 사항이 있을 때, 이를 탐지하여 자동으로 실시간으로 반영한다. 변경된 내용을 웹 사이트에서 바로 확인할 수 있다.
- 그러나 파일 추가 등의 일부 경우, 서버를 재부팅해야 반영되기도 한다.

* 주요 파일
- manage.py: 프로젝트와 관련된 관리 작업을 위한 핵심 스크립트 파일. 명령 프롬프트에서 명령어와 함께 실행한다.
- [프로젝트 이름 폴더]: 프로젝트에 대한 주요 설정 파일들이 들어있는 폴더.
- [프로젝트 이름]/settings.py: 프로젝트 핵심 설정 파일.