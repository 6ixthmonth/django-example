# 개요 및 목표
- 이 프로젝트는 이전의 예제 프로젝트에서 이어서 진행하며, 다음과 같은 내용을 주로 다룬다.
  - 자동화 테스트.
  - 테스트 케이스 작성 및 실행.
- 이전 프로젝트와 비교해서 각 앱의 tests.py 파일이 수정되었다.
- 올바르게 따라한다면 이 프로젝트와 유사한 결과물을 얻을 수 있다.


# 주요 배경 이론 및 문법
## 자동화 테스트(Automated Tests)
- 장고에서는 각 앱마다 테스트 코드를 작성할 수 있도록 지원한다.
- 작성한 테스트 코드를 이용해서 앱의 모델, 뷰 등의 오류를 검사할 수 있다.

### 테스트 작성
- 각 앱의 tests.py 파일에 django.test.TestCase를 상속하는 테스트 클래스를 구현한다.
- 테스트 클래스에 테스트 함수를 작성한다. 하나의 함수가 하나의 테스트로써 동작하고 여러 개의 함수를 작성하면 서로 독립적으로 동작한다.
- 테스트 함수에 테스트할 데이터를 생성하고 TestCase 클래스의 assert 함수들을 이용해서 검증한다.

### 테스트 실행 및 결과 확인
- 명령 프롬프트에 manage.py 파일에 test 명령어를 입력해서 테스트를 실행한다.
```shell
python manage.py test [앱 이름[, 앱 이름[, ...]]]
```
- 테스트를 실행하면 테스트를 위한 default 데이터베이스를 생성하고 테스트 함수들을 차례대로 실행한다.
- 테스트를 통과했는지, 실패했는지, 혹은 함수 내에 오류가 있는지 결과를 출력하고 테스트가 종료된다.
- 테스트에 사용하기 위해 생성한 데이터는 테스트 종료 후 소멸된다.
